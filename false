<lively-window class="global" tabindex="0" style="z-index: 108; position: absolute; left: 75.188px; top: 138.129px; width: 950px; height: 600px;" title="lively-d3-treemap.js"><lively-container tabindex="0" mode="edit" src="http://localhost:9005/lively4-core/src/components/demo/lively-d3-treemap.js" leftpane-flex="0.0001 1 0%" rightpane-flex="1.00106 1 0%"></lively-container></lively-window><lively-window class="global" tabindex="0" style="z-index: 106; position: absolute; left: 182.52px; top: 367.734px; width: 950px; height: 600px;" title="lively-container.html"><lively-container tabindex="0" mode="edit" src="http://localhost:9005/lively4-core/src/components/tools/lively-container.html" leftpane-flex="0.0001 1 0%" rightpane-flex="1.00106 1 0%"></lively-container></lively-window><lively-window class="global" tabindex="0" style="z-index: 107; position: absolute; left: 200px; top: 100px;" title="File Search"><lively-search search=".title"></lively-search></lively-window><lively-window style="opacity: 1; z-index: 109; position: absolute; left: 290.391px; top: 28.6409px; width: 1272px; height: 1083px;" class="global" title="lively-morph.js" tabindex="0"><lively-container tabindex="0" mode="edit" src="http://localhost:9005/lively4-core/src/components/widgets/lively-morph.js" leftpane-flex="" rightpane-flex=""></lively-container></lively-window><lively-window class="global" tabindex="0" style="z-index: 103; position: absolute; left: 362.242px; top: 592.102px;" title="Inspect: undefined"><lively-inspector></lively-inspector></lively-window><lively-window class="global" tabindex="0" style="z-index: 102; position: absolute; left: 157.52px; top: 342.734px; width: 950px; height: 600px;" title="lively-container-navbar.html"><lively-container tabindex="0" mode="edit" src="http://localhost:9005/lively4-core/src/components/tools/lively-container-navbar.html" leftpane-flex="0.2 1 0%" rightpane-flex="0.8 1 0%"></lively-container></lively-window><lively-window class="global" tabindex="0" style="z-index: 101; position: absolute; left: 157.52px; top: 342.734px; width: 950px; height: 600px;" title="ipython-list.js"><lively-container tabindex="0" src="http://localhost:9005/lively4-core/templates/ipython-list.js" leftpane-flex="" rightpane-flex=""><pre><code class="hljs javascript"><span class="hljs-string">"enable aexpr"</span>;

<span class="hljs-keyword">import</span> Morph <span class="hljs-keyword">from</span> <span class="hljs-string">'src/components/widgets/lively-morph.js'</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">IpythonList</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Morph</span> </span>{
  <span class="hljs-keyword">async</span> initialize() {
    <span class="hljs-keyword">this</span>.windowTitle = <span class="hljs-string">"IpythonList"</span>;
    <span class="hljs-keyword">this</span>.lastSelection = <span class="hljs-keyword">this</span>.lastSelection;
    <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">this</span>.names) {
      <span class="hljs-keyword">this</span>.names = [];
    }
  }

  clear() {
    <span class="hljs-keyword">var</span> list = <span class="hljs-keyword">this</span>.get(<span class="hljs-string">'#list'</span>);
    list.innerHTML = <span class="hljs-string">''</span>;
    <span class="hljs-keyword">this</span>.names = [];
    <span class="hljs-keyword">this</span>.lastSelection = <span class="hljs-literal">null</span>;
  }
  
  getList() {
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.names;
  }

  setList(names) {
    <span class="hljs-keyword">this</span>.clear();
    <span class="hljs-keyword">this</span>.names = names;
    <span class="hljs-keyword">var</span> origin = <span class="hljs-built_in">window</span>.location.origin;
    <span class="hljs-keyword">var</span> list = <span class="hljs-keyword">this</span>.get(<span class="hljs-string">'#list'</span>);
    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &amp;st; names.length; i++) {
      <span class="hljs-keyword">var</span> name = names[i];
      <span class="hljs-keyword">var</span> element = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"li"</span>);
      <span class="hljs-keyword">var</span> link = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"a"</span>);

      <span class="hljs-keyword">var</span> icon = <span class="hljs-string">'&amp;st;i class="fa fa-file"&gt;&amp;st;/i&gt;'</span>;
      link.innerHTML =  icon + name;
      link.href=origin + <span class="hljs-string">'/'</span> + name;

      link.onclick = <span class="hljs-function">(<span class="hljs-params">evt</span>) =&gt;</span> {
        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &amp;st; list.childNodes.length; i++) {
          <span class="hljs-keyword">var</span> e = list.childNodes[i];
          e.classList.remove(<span class="hljs-string">"selected"</span>);
        }
        evt.target.parentNode.classList.add(<span class="hljs-string">"selected"</span>);
        <span class="hljs-keyword">this</span>.onItemClick(element, evt); 
        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>
      };
      link.addEventListener(<span class="hljs-string">'contextmenu'</span>, (evt) =&gt; {
        <span class="hljs-keyword">if</span> (!evt.shiftKey) {
          <span class="hljs-keyword">this</span>.onContextMenu(evt, name)
          evt.stopPropagation();
          evt.preventDefault();
          <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;
        }
      }, <span class="hljs-literal">false</span>);
      element.appendChild(link);
      list.appendChild(element);
    }
  }

  onContextMenu(evt) {
<span class="hljs-comment">/*    if (this.targetObject &amp;&amp; !evt.shiftKey) { 
      evt.preventDefault();
      evt.stopPropagation();
      if (this.targetObject instanceof Array) {
        var menu = new ContextMenu(this, [
              ["inspect as table", () =&gt; Inspector.inspectArrayAsTable(this.targetObject)],
            ]);
        menu.openIn(document.body, evt, this);
      } else if (this.targetObject.tagName) {
        // for all html elements
        lively.openContextMenu(document.body, evt, this.selection || this.targetObject);
        return true
      }
	    return false;
    } 
    */</span>
  }

  itemSelected(a) {
    <span class="hljs-keyword">var</span> len = <span class="hljs-built_in">window</span>.location.origin.length + <span class="hljs-number">1</span>;
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'sss'</span>, a.href.slice(len));
    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.listener) {
     <span class="hljs-keyword">this</span>.listener(a.href.slice(len));
    }
  }

  onItemClick(element, evt) {
    <span class="hljs-keyword">this</span>.lastSelection = []
    <span class="hljs-keyword">this</span>.itemSelected(element.firstChild);
  }

 livelyMigrate(other) {
    <span class="hljs-comment">// whenever a component is replaced with a newer version during development</span>
    <span class="hljs-comment">// this method is called on the new object during migration, but before initialization</span>
    <span class="hljs-keyword">this</span>.setList(other.getList());
  }
  
  <span class="hljs-keyword">async</span> livelyExample() {
    <span class="hljs-keyword">this</span>.setList([<span class="hljs-string">"abc"</span>, <span class="hljs-string">"def"</span>]);
  }

}</code></pre></lively-container></lively-window><lively-window class="global" tabindex="0" style="z-index: 100; position: absolute; left: 132.52px; top: 317.734px; width: 950px; height: 600px;" title="ipython-logic.js"><lively-container tabindex="0" mode="edit" src="http://localhost:9005/lively4-core/src/components/tools/ipython-logic.js" leftpane-flex="0.2 1 0%" rightpane-flex="0.8 1 0%"></lively-container></lively-window><lively-window class="global" tabindex="0" style="z-index: 105; position: absolute; left: 456.544px; top: 11.6171px; width: 1200px; height: 871px;" title="ipython-list.js"><lively-container tabindex="0" src="http://localhost:9005/lively4-core/templates/ipython-list.js" leftpane-flex="" rightpane-flex="" mode="edit"></lively-container></lively-window><lively-window class="global" tabindex="0" style="z-index: 104; position: absolute; left: 89.8324px; top: 238.379px; width: 1036px; height: 800px;" title="IpythonTerminal"><ipython-terminal></ipython-terminal></lively-window><lively-halo draggable="true" data-lively4-donotpersist="all" style="display: none;"></lively-halo>
    <!-- booting lively just came down to this one line -->
    <script src="src/client/boot.js" data-container="true"></script>
  
<div id="mutationIndicator" style="position: fixed; right: 0px; top: 0px; width: 10px; height: 10px; background-color: rgba(10, 10, 10, 0.3); pointer-events: none; z-index: 2000;"></div>

<lively-window class="global" tabindex="0" style="z-index: 110; position: absolute; left: 785.179px; top: 174.941px; width: 858.375px; height: 1000px;" title="Workspace" data-lively-expose-prev-position="absolute" data-lively-expose-prev-left="36.9688px" data-lively-expose-prev-top="6.21522px" data-lively-expose-prev-bottom="" data-lively-expose-prev-right="" data-lively-expose-prev-width="1356px" data-lively-expose-prev-height="900px" data-lively-expose-prev-cursor="" data-lively-expose-prev-transform="scale(0.4)" data-lively-expose-prev-transition="" active="true"><lively-code-mirror mode="text/jsx">

function setSettings() {
    var Request = window.Services.ServerConnection.defaultSettings.Request;
    var Headers = window.Services.ServerConnection.defaultSettings.Headers;
    var WebSocket = window.Services.ServerConnection.defaultSettings.WebSocket;
   // var fetch = window.Services.ServerConnection.defaultSettings.fetch;
    var fetch = window.originalFetch;
    return {baseUrl: 'http://localhost:8888', pageUrl:"", wsUrl: "ws://localhost:8888", token: '0a6f547598efb69bc5cd6dbe2c133fe7ff23568e18feb464',
               init: {cache: 'no-store', credentials: "same-origin"},
               Request: Request, Headers: Headers, WebSocket: WebSocket, fetch: fetch};
    
  }

var session = window.Services.Session.listRunning(setSettings()).then(sessionModels =&gt; {
   console.log('sessionModels', sessionModels);
    window.Services.Session.connectTo(sessionModels[0], setSettings()).then((session) =&gt; {
    console.log(session.kernel);
  })});


var contents = new window.Services.ContentsManager( {serverSettings: setSettings()})

var mymodel;

contents.get("1.png").then((model) =&gt; {
  mymodel = model;
  console.log('files: ', model)});

mymodel

window.Services.Kernel.getSpecs(setSettings()).then(kernelSpecs =&gt; {
  console.log(kernelSpecs);
})

window.tensorView
      window.tensorView.showTensor(null)

window.terminal

var a;
lively.create('ipython-painter').then((x) =&gt; {a = x});
a.register()

var b;
lively.create('ipython-tensorview').then((x) =&gt; {b = x});
b.register()
b.ask('dense_2')
b.register()

var c;
lively.create('lively-container-navbar').then((x) =&gt; {c = x});
b.appendChild(c)

apply code or template</lively-code-mirror></lively-window>
<div class="lively-preferences lively-content" data-body-position="{&quot;x&quot;:0,&quot;y&quot;:0}" data-body-scroll="{&quot;x&quot;:0,&quot;y&quot;:0}" data--snap-windows-in-grid="false" data--show-fixed-browser="false" data--show-document-grid="false"></div>
<lively-hand data-lively4-donotpersist="all" style="visibility: hidden;"></lively-hand><lively-notification-list><lively-notification></lively-notification></lively-notification-list><lively-halo draggable="true" data-lively4-donotpersist="all" style="top: 0px; left: 0.015px; width: 1094px; height: 838.812px; display: none;"></lively-halo><ipython-tensorview></ipython-tensorview><p style="position: absolute; left: 904px; top: 454px;">
</p><lively-halo draggable="true" data-lively4-donotpersist="all" style="top: 0.0001px; left: 0px; width: 709px; height: 439.812px; display: none;"></lively-halo><lively-menu tabindex="0" style="position: absolute; left: 148px; top: 30px;"></lively-menu>